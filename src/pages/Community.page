<apex:page standardStylesheets="false" showHeader="false" sidebar="false" showChat="false" controller="CommunityController">

   <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.AgeResources, '/css/bootstrap.css'))}"/>
      <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.AgeResources, '/css/bootstrap-select.css'))}"/>
         <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.AgeResources, '/css/jquery.jscrollpane.css'))}"/>
                  <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.AgeResources, '/css/prettyCheckable.css'))}"/>
           <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.AgeResources, '/css/jquery-ui-1.10.3.custom.css'))}"/>
            <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.AgeResources, '/css/owl.carousel.css'))}"/>
               <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.AgeResources, '/css/bootstrap-theme.css'))}"/>
                              <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.AgeResources, '/css/style.css'))}"/>
<script>
    var analyticId = "{!$Setup.game_GamificationConfiguration__c.Google_Analytics_ID__c}";
    var url = top.location.href;
	var userId = '{!$User.Id}';
	var userName = '{!$User.FirstName}' + ' ' + '{!$User.LastName}';
  	(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  	(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  	m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  	})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
	
      ga('create', analyticId, 'auto');
      ga('set', 'location', url);
      ga('set', 'dimension1', userId);
      ga('set', 'dimension2', userName);
      ga('send', 'pageview');

</script>

<html lang="en" ng-app="communityApp" ng-controller="ctrlCommunity" ng-init="load()">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="description" content=""/>
    <meta name="author" content=""/>

    <title>Community</title>

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="js/html5shiv.js"></script>
    <script src="js/respond.min.js"></script>
    <![endif]-->
</head>

<body>

<header>
    <div class="container" ng-controller="ctrlAgeUserInfo" ng-init="loadLoggedInUser()">
        <div class="row">
            <div class="col-sm-8">
                <a href="#"><img src="{!JSENCODE(URLFOR($Resource.AgeResources, 'i/AGE.png'))}" width="300px"/></a>
            </div>
            <div class="col-sm-4 text-right">
                Hi, <a href="/apex/AgeProfile">{{user.Name}}</a>
                <img ng-src="{{user.SmallPhotoUrl}}"/>
            </div>        
        </div>
    </div>
</header>

<nav class="navbar" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#nav-menu">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand visible-xs" href="#">MENU</a>
        </div>
        <div class="collapse navbar-collapse col-sm-9" id="nav-menu">
            <ul class="nav navbar-nav navbar-left">
                <li><a href="/apex/AgeProfile">Profile</a></li>
                <li class="active"><a href="/apex/Community">Community</a></li>
                <li><a href="/apex/Challenges">Challenges</a></li>
                <li><a href="/apex/Badges">Badges</a></li>
                <li><a href="/">Salesforce</a></li>
            </ul>
        </div>
        <div class="col-sm-3 navbar-right">
            <form class="navbar-form" role="search">
                <div class="search-control" ng-init="loadUsers()" ng-controller="ctrlUserSearch">
                    <input type="text" ng-model="selectedUser" typeahead="e as e.Name for e in users | filter:{Name:$viewValue} | limitTo:8" typeahead-on-select="goToProfile($item)" class="form-control" placeholder="Search Members"/>
                    <button type="submit" class="btn btn-default"></button>
                </div>
            </form>
        </div>
    </div>
</nav>

<div class="container" >

    <div class="row">

        <div class="list-status clearfix">
            <div class="col-md-3 col-sm-6">
                <div class="status">
                    <img src="{!JSENCODE(URLFOR($Resource.AgeResources, 'i/status/total-number-of-challenges-completed.png'))}"/>
                    <div class="data">
                        <h4>Total # of Challenges Completed</h4>
                        <div class="unit">Past 30 days</div>
                        <strong>{{totalChallengesCompleted | roundUp}}</strong>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="status">
                    <img src="{!JSENCODE(URLFOR($Resource.AgeResources, 'i/status/average-number-of-challenges-completed.png'))}"/>
                    <div class="data">
                        <h4>Average # of Challenges Completed</h4>
                        <div class="unit">Per Person, Past 30 days</div>
                        <strong>{{averageChallengesCompleted | roundUp}}</strong>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="status">
                    <div class="icon points-earned level-5" ng-show="{{averagePointsEarned > 4000}}"></div>
                    <div class="icon points-earned level-4" ng-show="{{averagePointsEarned > 2000 && averagePointsEarned <= 4000}}"></div>
                    <div class="icon points-earned level-3" ng-show="{{averagePointsEarned > 200 && averagePointsEarned <= 2000}}"></div>
                    <div class="icon points-earned level-2" ng-show="{{averagePointsEarned > 1 && averagePointsEarned <= 200}}"></div>
                    <div class="icon points-earned level-1" ng-show="{{averagePointsEarned == 0}}"></div>                                                                              
                    <div class="data">
                        <h4>Average # of <br/>Points <br/>Earned</h4>
                        <div class="unit">Per Person, Past 30 days</div>
                        <strong>{{averagePointsEarned | roundUp}}</strong>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-sm-6">
                <div class="status">
                    <img src="{!JSENCODE(URLFOR($Resource.AgeResources, 'i/status/current-points-up-for-grabs.png'))}"/>
                    <div class="data">
                        <h4>Current<br/> Points Up for <br/>Grabs</h4>
                        <div class="unit"></div>
                        <strong>{{totalPointsAvailable | roundUp}}</strong>
                    </div>
                </div>
            </div>
        </div><!-- /.list-status -->

        <div class="col-md-4 col-sm-12">
            <div class="page-header">
                <h3>Community</h3>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="panel-fun panel-community panel panel-default">
                        <div class="panel-heading">
                            Our Community Fun Factor
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-6 col-sm-6  col-xs-6 text-center">
                                    <img src="{!JSENCODE(URLFOR($Resource.AgeResources, 'i/fun/fun-1.jpg'))}"/>
                                </div>
                                <div class="col-md-6 col-sm-6  col-xs-6">
                                    <strong class="factor"><span>{{funFactor | number:0}}<small>%</small></span></strong>
                                </div>
                            </div>
                        </div>
                    </div><!-- /.panel-fun -->
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 col-sm-6">
                    <div class="panel-community panel panel-default">
                        <div class="panel-heading">
                            Challenges Spotlight
                        </div>
                        <div class="panel-body">
                            <ul class="nav nav-tabs nav-justified">
                                <li class="active"><a href="#challenges-recent-earned" data-toggle="tab">Most Recently Earned</a></li>
                                <li><a href="#challenges-often-earned" data-toggle="tab">Most Often Earned</a></li>
                            </ul>

                            <div class="tab-content">
                                <div class="tab-pane active" id="challenges-recent-earned">
                                    <ul class="list-unstyled">
                                        <li ng-repeat="challenge in mostRecentCompletedChallenges">
                                            <a href="/apex/Challenges#?challengeId={{challenge.Challenge__c}}"><strong ng-bind="htmlMe(challenge.Challenge__r.Title__c)"></strong></a><br/>
                                            <a href="/apex/AgeProfile?userId={{challenge.User__c}}">{{challenge.User__r.Name}}</a><br/>
                                            {{convertToUTC(challenge.CreatedDate) | date:'M/d/yyyy'}}</li>
                                    </ul>
                                </div>
                                <div class="tab-pane" id="challenges-often-earned">
                                    <ul class="list-unstyled">
                                        <li ng-repeat="challenge in mostOftenCompletedChallenges">
                                          <a href="/apex/Challenges#?challengeId={{challenge.Id}}"><strong ng-bind="htmlMe(challenge.Title__c)"></strong></a><br/>
                                            {{challenge.expr0}} Hits</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div><!-- /.panel-community -->
                </div>

                <div class="col-md-12 col-sm-6">
                    <div class="panel-badge-spotlight panel-community panel panel-default">
                        <div class="panel-heading">
                            Badge Spotlight
                        </div>
                        <div class="panel-body">
                            <ul class="nav nav-tabs nav-justified">
                                <li class="active"><a href="#badge-recent-earned" data-toggle="tab">Most Recently Earned</a></li>
                                <li><a href="#badge-often-earned" data-toggle="tab">Most Often Earned</a></li>
                            </ul>

                            <div class="tab-content">
                                <div class="tab-pane active" id="badge-recent-earned">
                                    <ul class="list-unstyled">
                                        <li class="clearfix" ng-repeat="badge in mostRecentEarnedBadges">
                                            <img ng-src="{{badge.Badge__r.Image_URL__c}}"/>
                                            <div class="data">
                                                <a href="/apex/Badges#?badgeId={{badge.Badge__r.Id}}"><strong ng-bind="htmlMe(badge.Badge__r.Title__c)"></strong></a><br/>
                                                <a href="/apex/AgeProfile?UserId={{badge.User__c}}">{{badge.User__r.Name}}</a><br/>
                                                {{badge.CreatedDate | date:'M/d/yyyy'}}
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                                <div class="tab-pane" id="badge-often-earned">
                                    <ul class="list-unstyled">
                                        <li class="clearfix" ng-repeat="badge in mostOftenEarnedBadges">
                                            <img ng-src="{{badge.Image_URL__c}}"/>
                                            <div class="data">
                                                <a href="/apex/Badges#?badgeId={{badge.Badge__r.Id}}"><strong ng-bind="htmlMe(badge.Title__c)"></strong></a><br/>
                                                {{badge.expr0}} Hits
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div><!-- /.panel-badge-spotlight -->
                </div>
            </div>

        </div>

        <div class="col-md-8 col-sm-12">
            <div class="page-header">
                <h3>Leaderboard</h3>
            </div>
            <div class="row">

                <aside class="col-sm-6 col-sm-push-6">
                    <form>
                        <fieldset>
                            <h6>Show Results for</h6>
                            <div class="form-group">
                                <select id="select-leaderboard-type" ng-model="leaderBoardGroup" ng-change="reloadLeaderboard()">
                                    <option value="individual">Individuals</option>
                                    <option value="practice">Practices</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <select ng-model="timeFrame" ng-change="reloadLeaderboard()">
                                    <option value="at">All Time</option>
                                    <option value="ty">This Year</option>
                                    <option value="tq">This Quarter</option>
                                    <option value="tm" selected="selected">This Month</option>                                    
                                    <option value="lq">Last Quarter</option>
                                    <option value="l2q">Last 2 Quarters</option>

                                </select>
                            </div>
                        </fieldset>
                        <fieldset>
                            <h6 data-toggle="collapse" href="#collapse-filtes" class="collapse-filtes-header collapsed">Filter Results</h6>

                            <div id="collapse-filtes" class="collapse">
                                <div class="panel-filter panel">
                                    <div class="panel-heading">By Challenge</div>
                                    <div class="panel-body">
                                        <div class="search-control form-group">
                                            <input type="search" ng-model="lastSelectedChallenge" class="form-control" typeahead="c as c for c in filterableChallenges | filter:$viewValue | limitTo:8" typeahead-on-select="addChallengeTitleToFilters($item)" placeholder="Search..."/>
                                            <button type="submit" class="btn btn-default"></button>
                                            <div class="list-keyword">
                                                <ul class="list-unstyled">
                                                    <li ng-repeat="title in challengeTitlesForFilter">{{title}}<a style="cursor:pointer" ng-click="removeChallengeTitleToFilters(title)"></a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-filter panel">
                                    <div class="panel-heading">By Region</div>
                                    <div class="panel-body">
                                      <pretty-checkable-group models="regions"/>
                                    </div>
                                </div>
                                <div class="panel-filter panel">
                                    <div class="panel-heading">By Practice</div>
                                    <div class="panel-body">
                                      <pretty-checkable-group models="practices"/>
                                    </div>
                                </div>
                                <div class="panel-filter panel">
                                    <div class="panel-heading">By Core Value</div>
                                    <div class="panel-body">
                                      <pretty-checkable-group models="coreValues"/>
                                    </div>
                                </div>
                                <div class="panel-filter panel">
                                    <div class="panel-heading">By Focus</div>
                                    <div class="panel-body">
                                      <pretty-checkable-group models="focuses"/>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </aside>

                <div class="col-sm-6 col-sm-pull-6 add-bottom-margin">

                        <div id="scroll-leaderboard" j-scroll-pane="scroll-leaderboard">
                            <div class="scroll-wrap">
                                <div class="list-individual" style="height:100%">
                                    <div class="panel panel-default" ng-class="{'panel-individual':leaderBoardGroup=='individual', 'panel-practice':leaderBoardGroup=='practice'}" ng-repeat="lb in leaderBoard | filter:coreValueFilter | filter:focusFilter | filter:regionFilter | filter:practiceFilter | filter:challengeTitleFilter | orderBy:[totalPointsPerUserOrder, 'name']" j-scroll-pane-item="{{lb.name}}">
                                        <div class="panel-body">
                                            <img ng-src="{{lb.imageUrl}}" width="47px"/>
                                            <div>
                                                {{$index + 1}}<br/>
                                                <a href="/apex/AgeProfile?userId={{lb.userId}}" ng-show="leaderBoardGroup=='individual'">{{lb.name}}</a>                                        
                                                <a href="#" ng-show="leaderBoardGroup=='practice'">{{lb.name}}</a>
                                                <br/>                                                
                                                {{totalPointsPerUser(lb) | number:0}} Points
                                            </div>
                                        </div>
                                    </div>
                                    
                                    
                                </div>

                            </div>
                        </div><!-- /#scroll-leaderboard -->

                    </div>

            </div>
        </div><!-- /.aside -->
    </div>
</div><!-- /.container -->

<footer>
    <div class="container">
        <div class="row">
            <div class="col-sm-8 clearfix">
                <ul class="list-unstyled list-inline pull-left">
                    <li><a href="/apex/AgeProfile">Profile</a></li>
                    <li><a href="/apex/Community">Community</a></li>
                    <li><a href="/apex/Challenges">Challenges</a></li>
                    <li><a href="/apex/Badges">Badges</a></li>
                    <li><a href="/">Salesforce</a></li>
                </ul>
            </div>
            <div class="col-sm-4 text-right">
                <a href="http://www.appirio.com"><img src="{!JSENCODE(URLFOR($Resource.AgeResources, 'i/logo-APPIRIO.png'))}"/></a>
                <a class="btn btn-primary btn-top"><img src="{!JSENCODE(URLFOR($Resource.AgeResources, 'i/icon-top.png'))}"/></a>
            </div>
        </div>
    </div>
</footer>


<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
                                                           <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/jquery.js'))}"/>
                                                            <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/bootstrap.min.js'))}"/>
                                                                                          <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/bootstrap-select.js'))}"/>
                                                                                                                                                                                    <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/prettyCheckable.js'))}"/>
                                                                                                                        <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/jquery.mousewheel.js'))}"/>
                                                                                                                                                      <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/jquery.jscrollpane.min.js'))}"/>
                                                                                                                                                                                    <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/jquery-ui-1.10.3.custom.min.js'))}"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                    <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/owl.carousel.min.js'))}"/>
<apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/script.js'))}"/>
                                                                                                                                                                                                                  <apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/angular.min-1.1.4.js'))}"/>
<apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/ui-bootstrap-tpls.min-0.5.0.js'))}"/>
<apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/moment.min-2.1.0.js'))}"/>
<apex:includeScript value="{!JSENCODE(URLFOR($Resource.AgeResources, '/js/underscore.min-1.5.1.js'))}"/>

<script type="text/javascript">

/**
 * Convert url parameters to JavaScript Object for
 * easy data extraction
 *
 * created by Nir Kaufman
 * il.linkedin.com/in/nirkaufman/
 *
 */
var qs = angular.module('Qs', []);

/**
 * This service will return the Query object that
 * contain all the url parameters passed.
 * it depends on the global angular $window object
 * that build in the library
 */
qs.factory('Query', function ($window) {

    var query_string = {};
    var query = $window.location.search.substring(1);
    var vars = query.split("&");

    for (var i = 0; i < vars.length; i++) {

        var pair = vars[i].split("=");

        if (typeof query_string[pair[0]] === "undefined") {
            query_string[pair[0]] = pair[1];
        } else if (typeof query_string[pair[0]] === "string") {
            query_string[pair[0]] = [ query_string[pair[0]], pair[1] ];
        } else {
            query_string[pair[0]].push(pair[1]);
        }
    }
    return query_string;
})

    var au = angular.module('ageUserInfo', []);
    
    //factory method to load logged in user    
    au.factory('loadLoggedInUser', ['$q', '$rootScope', 'controllerName', function($q, $rootScope, controllerName) {
      return function() {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          controllerName + '.getLoggedInUser',
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);      
    

    au.controller('ctrlAgeUserInfo', 
      ['$scope', '$location', 'loadLoggedInUser',
      function ($scope, $location, loadLoggedInUser) {
      
      $scope.user = [];
      
      $scope.loadLoggedInUser = function(){
        loadLoggedInUser().then(function(results){$scope.user=results})
      
      }
      
      
      }])  
      
      
    var userSearch = angular.module('userSearch', []);
    
    //factory method to load all employees from the ChallengeManagerController
    userSearch.factory('loadUsersForSearch', ['$q', '$rootScope', 'controllerName', function($q, $rootScope, controllerName) {
      return function() {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          controllerName + '.getAllUsers',
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    
    //defines the controller
    var userSearchController=userSearch.controller('ctrlUserSearch', 
      ['$scope', '$location', 'loadUsersForSearch',
      function ($scope, $location, loadUsersForSearch) {
      
      $scope.users = [];
      $scope.selectedUser = '';
      
      $scope.loadUsers = function(){
        loadUsersForSearch().then(function(results){$scope.users=results})
      
      }
      
      $scope.goToProfile = function(user){
        location.href=window.location.protocol + '//' + window.location.hostname + '/apex/AgeProfile?userId=' + user.Id;
      }
      
      }]) 



    <!-- Name your application -->
    var communityApp = angular.module('communityApp', ['ui.bootstrap', 'Qs', 'ageUserInfo', 'userSearch']);
    
    communityApp.provider('controllerName', function(){ this.$get = function(){  return 'CommunityController'}})
    
    communityApp.config(['$locationProvider', function($locationProvider) {
      $locationProvider.html5Mode(false);
    }]);
             
    //factory to load leaderboard all time leaders
    communityApp.factory('loadAllTimeLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getAllTimeLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard all time leaders for practices
    communityApp.factory('loadAllTimePracticeLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getAllTimePracticeLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for this quarter
    communityApp.factory('loadThisQuartersLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getThisQuartersLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for this quarter by practice
    communityApp.factory('loadThisQuartersPracticeLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getThisQuartersPracticeLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for last quarter
    communityApp.factory('loadLastQuartersLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getLastQuartersLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for last quarter
    communityApp.factory('loadLastQuartersPracticeLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getLastQuartersPracticeLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for last 2 quarters
    communityApp.factory('loadLast2QuartersLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getLast2QuartersLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for last 2 quarters
    communityApp.factory('loadLast2QuartersPracticeLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getLast2QuartersPracticeLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    
    //factory to load leaderboard for this month
    communityApp.factory('loadThisMonthsLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getThisMonthsLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for this month
    communityApp.factory('loadThisMonthsPracticeLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getThisMonthsPracticeLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for this year
    communityApp.factory('loadThisYearsLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getThisYearsLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to load leaderboard for this year
    communityApp.factory('loadThisYearsPracticeLeaders', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getThisYearsPracticeLeaders', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);
    
    //factory to community totals
    communityApp.factory('loadCommunityTotals', ['$q', '$rootScope', function($q, $rootScope) {
      return function(result, event) {
        var deferred = $q.defer();
 
        Visualforce.remoting.Manager.invokeAction(
          'CommunityController.getCommunityTotals', 
          function(result, event) {
            $rootScope.$apply(function() {
              if (event.status) {
                deferred.resolve(result);
              } else {
                deferred.reject(event);
              }
            })
          },
          { buffer: true, escape: true, timeout: 30000 }
        );
        return deferred.promise;              
      }
    }]);   
    
    
    communityApp.directive('jScrollPane', function() {
        return function(scope, element, attrs) {
                scope.$on('repaintScroll', 
                    function(event){ 

                        var scroll_leaderboard = $(element).jScrollPane({autoReinitialise:true});
                        var scroll_leaderboard_api = scroll_leaderboard.data('jsp');
                        scroll_leaderboard_api.scrollTo(0,0,0);

                        var scroll_leaderboard_height=0;

                        $('#scroll-leaderboard .scroll-wrap > div:not(.hidden) > div.panel').each(function(i,v) {
                            if(i==10) return false;
                            scroll_leaderboard_height += $(v).height()+20;
                        });

                        $('#scroll-leaderboard').height(scroll_leaderboard_height);

                        scroll_leaderboard_api.reinitialise();
                    });
            }
        });

    communityApp.directive('jScrollPaneItem', function() {
        return function(scope, element, attrs) {
                if(scope.$last){
                    scope.$emit('repaintScroll');
                }
            }
        
    });

    communityApp.directive('prettyCheckableGroup', function() {
        return {
            restrict: 'E',
            scope: {models: "="},
            replace: true,
            template : '<div><div ng-repeat="model in models" class="form-group" ng-class="{active: showAll, more:$index > 2}"><div class="clearfix prettycheckbox labelright  blue " ng-click="model.checked = !model.checked"><input label="{{model.name}}" type="checkbox" style="display: none;"><a ng-class="{checked : model.checked}"></a><label for="undefined">{{model.name}}</label></div></div><div class="for-group" ng-show="models.length > 3"><a style="cursor:pointer" class="show-more" ng-click="toggle()">{{showText}}</div><div class="actions"><a style="cursor:pointer" ng-click="clearAll()">Clear all</a></div></div>',
            link: function(scope, element, attrs) {
                scope.showText = "Show More...";
                scope.showAll = false;
                scope.toggle = function(){
                    if(scope.showText === "Show More...") {
                        scope.showText = "Show Less..."
                        scope.showAll = true;
                    } else {
                        scope.showText = "Show More..."
                        scope.showAll = false;
                    }
                }
                scope.clearAll = function() {
                    angular.forEach(scope.models, function(item, key){
                        item.checked = false;
                    })
                }
                
            }
        }
    
    });
    
     
    communityApp.filter('roundUp', function($filter){  
      var numberFilter = $filter('number');
      return function(number){ 
        return numberFilter(Math.round(Math.ceil(number)), 0);
      }
    });
     
     

    //defines the controller
    var communityController=communityApp.controller('ctrlCommunity', 
      ['$scope', '$location', '$timeout','loadAllTimeLeaders', 'loadThisQuartersLeaders', 'loadLastQuartersLeaders', 
        'loadLast2QuartersLeaders', 'loadThisMonthsLeaders', 'loadThisYearsLeaders',
        'loadAllTimePracticeLeaders', 'loadThisQuartersPracticeLeaders', 'loadLastQuartersPracticeLeaders', 
        'loadLast2QuartersPracticeLeaders', 'loadThisMonthsPracticeLeaders', 'loadThisYearsPracticeLeaders', 
        'loadCommunityTotals',
      function ($scope, $location, $timeout,  
        loadAllTimeLeaders, loadThisQuartersLeaders, loadLastQuartersLeaders, 
        loadLast2QuartersLeaders, loadThisMonthsLeaders, loadThisYearsLeaders, 
        loadAllTimePracticeLeaders, loadThisQuartersPracticeLeaders, loadLastQuartersPracticeLeaders, 
        loadLast2QuartersPracticeLeaders, loadThisMonthsPracticeLeaders, loadThisYearsPracticeLeaders,
        loadCommunityTotals) {
      
        $scope.totalChallengesCompleted = '';
        $scope.averageChallengesCompleted = '';
        $scope.averagePointsEarned = '';   
        $scope.totalPointsAvailable = '';  
        $scope.mostRecentCompletedChallenges = [];                
        $scope.mostOftenCompletedChallenges = [];
        $scope.mostRecentEarnedBadges = [];                
        $scope.mostOftenEarnedBadges = [];
        $scope.funFactor = '';
        
        //function to render quotes correctly
        $scope.htmlMe = function (html) {
          return $("<div/>").html(html).text();
        }

        $scope.$watch(function(){return $scope.leaderBoard}, function(){$scope.updateFilterableChallenges()}, true)

        $scope.updateFilterableChallenges = function() {
            $scope.filterableChallenges = [];
            angular.forEach($scope.leaderBoard, function(item, key){
                angular.forEach(item.filteredChallenges, function(item, key){
                    $scope.filterableChallenges.push(item.Title__c);
                })
            });
            $scope.filterableChallenges = _.uniq($scope.filterableChallenges);
        }

        $scope.challengeTitlesForFilter = [];

        $scope.lastSelectedChallenge = "";
        $scope.addChallengeTitleToFilters = function(title) {
            $scope.challengeTitlesForFilter.push($scope.htmlMe(title));
            $scope.lastSelectedChallenge = "";
        }

        $scope.removeChallengeTitleToFilters = function(title) {
            $scope.challengeTitlesForFilter.remove(title);
            $scope.lastSelectedChallenge = "";
        }

        $scope.totalPointsPerUserOrder = function(lb) {
            return -1 * $scope.totalPointsPerUser(lb);
        }

        $scope.totalPointsPerUser = function(lb) {
          var totalPoints = 0;

          var coreValueFilteredChallenges = [];
          var checkedCoreValues = [];
          if($scope.coreValues.length > 0) {
          
            for(var i=0; i<$scope.coreValues.length; i++) {
              if($scope.coreValues[i].checked){
                checkedCoreValues.push($scope.coreValues[i].name);
              }
            }
          
            if(checkedCoreValues.length > 0) {
              for(var i=0; i<lb.challenges.length; i++) {
                if(_.contains(checkedCoreValues, lb.challenges[i].Core_Value__c)) {
                  coreValueFilteredChallenges.push(lb.challenges[i]);
                } 
              }
            } else {
              coreValueFilteredChallenges = lb.challenges;
            }
          }

          var focusFilteredChallenges = [];
          var checkedFocuses = [];
          if($scope.focuses.length > 0) {
            for(var i=0; i<$scope.focuses.length; i++) {
              if($scope.focuses[i].checked){
                checkedFocuses.push($scope.focuses[i].name);
               }
            }

            if(checkedFocuses.length > 0) {
              for(var i=0; i<lb.challenges.length; i++) {
                if(_.contains(checkedFocuses, lb.challenges[i].Focus__c)) {
                  focusFilteredChallenges.push(lb.challenges[i]);
                }
              }
            } else {
              focusFilteredChallenges = lb.challenges;
            }
          }

          var challengeTitleFiltered = [];
          if($scope.challengeTitlesForFilter.length > 0) {
            angular.forEach(lb.challenges, function(item, key){
              if(_.contains($scope.challengeTitlesForFilter, $scope.htmlMe(item.Title__c))){
                challengeTitleFiltered.push(item);
              }
            });
          } else {
            challengeTitleFiltered = lb.challenges;
          }

          var filteredChallenges = lb.challenges;

          if(checkedCoreValues.length > 0 || checkedFocuses.length > 0 || $scope.challengeTitlesForFilter.length > 0) {
            filteredChallenges = _.intersection(coreValueFilteredChallenges, focusFilteredChallenges, challengeTitleFiltered);
          } 

          lb.filteredChallenges = filteredChallenges;

          angular.forEach(lb.filteredChallenges, function(item, key){
                totalPoints += item.Reward_Points__c;
          })
          
          return totalPoints;
        
        }

        $scope.challengeTitleFilter = function(lb) {
          if($scope.challengeTitlesForFilter.length == 0){
            return true;
          }

          var match = false;
          angular.forEach(lb.filteredChallenges, function(item, key){
            if(_.contains($scope.challengeTitlesForFilter, $scope.htmlMe(item.Title__c))){
              match = true;
            }
          });

          return match;
        }
        
        
        $scope.leaderBoard = [];
        $scope.timeFrame = 'tm';
        $scope.leaderBoardGroup = 'individual';
        $scope.coreValues = [];
        $scope.focuses = [];
        $scope.practices = [];
        $scope.regions = [];                
    
    
        $scope.convertToUTC = function(dt) {
          var localDate = new Date(dt);
          var localTime = localDate.getTime();
          var localOffset = localDate.getTimezoneOffset() * 60000;
          return new Date(localTime + localOffset);
        };
        
        
        $scope.coreValueFilter = function(item) {
          var checkedCoreValues = [];
          
          for(var i=0; i<$scope.coreValues.length; i++) {
            if($scope.coreValues[i].checked){
              checkedCoreValues.push($scope.coreValues[i].name);
            }
          }
          
          if(checkedCoreValues.length == 0) {
            return true;
          }
          
          for(var i=0; i<item.challenges.length; i++) {
            if(_.contains(checkedCoreValues, item.challenges[i].Core_Value__c)) {
              return true;
            }
          }
          return false;
        }   
        
        
        $scope.focusFilter = function(item) {
          var checkedFocuses = [];
          
          for(var i=0; i<$scope.focuses.length; i++) {
            if($scope.focuses[i].checked){
              checkedFocuses.push($scope.focuses[i].name);
            }
          }
          
          if(checkedFocuses.length == 0) {
            return true;
          }
          
          for(var i=0; i<item.challenges.length; i++) {
            if(_.contains(checkedFocuses, item.challenges[i].Focus__c)) {
              return true;
            }
          }
          return false;
        }   
        
        $scope.regionFilter = function(item) {
          var checkedRegions = [];
          
          for(var i=0; i<$scope.regions.length; i++) {
            if($scope.regions[i].checked){
              checkedRegions.push($scope.regions[i].name);
            }
          }
          
          if(checkedRegions.length == 0) {
            return true;
          }
          
          if(_.intersection(checkedRegions, item.regions).length > 0){ 
            return true;
          }
          
          return false;
        }   
        
        $scope.practiceFilter = function(item) {
          var checkedPractices = [];
          
          for(var i=0; i<$scope.practices.length; i++) {
            if($scope.practices[i].checked){
              checkedPractices.push($scope.practices[i].name);
            }
          }
          
          if(checkedPractices.length == 0) {
            return true;
          }
          
          if(_.contains(checkedPractices, item.practice)){ 
            return true;
          }
          
          return false;
        }   

        $scope.setLeaderboard = function(lb) {
            $scope.leaderBoard = lb;
            for(var i=0; i< $scope.leaderBoard.length;i++){
                //$scope.leaderBoard[i].filteredChallenges = $scope.leaderBoard[i].challenges;
                $scope.leaderBoard[i].totalPoints = $scope.totalPointsPerUser($scope.leaderBoard[i]);
            }

            console.log($scope.leaderBoard);
            
        }
    
        $scope.reloadLeaderboard = function() {
          
          
          if($scope.leaderBoardGroup == 'individual'){       
            if ($scope.timeFrame == 'at') {
              loadAllTimeLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'tq') {
              loadThisQuartersLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'lq') {
              loadLastQuartersLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'l2q') {
              loadLast2QuartersLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'tm') {
              loadThisMonthsLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'ty') {
              loadThisYearsLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }
          }else if ($scope.leaderBoardGroup == 'practice') {
            if ($scope.timeFrame == 'at') {
              loadAllTimePracticeLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'tq') {
              loadThisQuartersPracticeLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'lq') {
              loadLastQuartersPracticeLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'l2q') {
              loadLast2QuartersPracticeLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'tm') {
              loadThisMonthsPracticeLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }else if ($scope.timeFrame == 'ty') {
              loadThisYearsPracticeLeaders().then(function(result){
                $scope.setLeaderboard(result);
              });
            }
          }
        }
    
        $scope.load = function(){
          
          loadCommunityTotals().then(function(result){
            
            $scope.totalChallengesCompleted = result.totalChallengesCompleted;
            $scope.averageChallengesCompleted = result.averageNumberOfChallengesCompleted;
            $scope.averagePointsEarned = result.averageNumberOfPointsEarned;
            
            $scope.totalPointsAvailable = result.currentPointsAvailable;

            $scope.mostRecentCompletedChallenges = result.mostRecentlyCompletedChallenges;
            $scope.mostOftenCompletedChallenges = result.mostOftenCompletedChallenges;

            $scope.mostRecentEarnedBadges = result.mostRecentlyEarnedBadges;
            $scope.mostOftenEarnedBadges = result.mostOftenEarnedBadges;
            $scope.funFactor = result.funFactor;
            
            for(var i = 0; i < result.coreValueTypes.length; i++){
              $scope.coreValues.push({name:result.coreValueTypes[i], checked:false});
            }
          
            for(var i = 0; i < result.focusTypes.length; i++){
              $scope.focuses.push({name:result.focusTypes[i], checked:false});
            }
            
            for(var i = 0; i < result.regions.length; i++){
              $scope.regions.push({name:result.regions[i], checked:false});
            }
            
            for(var i = 0; i < result.practices.length; i++){
              $scope.practices.push({name:result.practices[i], checked:false});
            }
          });
          
          loadThisMonthsLeaders().then(function(result){
            $scope.setLeaderboard(result);
          });
        }
      
      }])
      
</script>

</body>
</html>
</apex:page>
